{"version":3,"sources":["StateProvider.js","reducer.js","pages/Search.js","pages/Home.js","useGoogleSearch.js","Keys.js","pages/SearchPage.js","App.js","reportWebVitals.js","serviceWorker.js","index.js"],"names":["StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","actionTypes","state","action","console","log","type","term","Search","hideButtons","dispatch","useState","input","setInput","history","useHistory","search","e","preventDefault","push","className","onChange","target","Button","onClick","variant","Home","Stack","direction","spacing","Avatar","alt","src","useGoogleSearch","data","setData","useEffect","fetchData","a","fetch","then","response","json","result","SearchPage","to","LocalOfferOutlined","searchInformation","formattedTotalResults","formattedSearchTime","items","map","item","href","link","pagemap","cse_image","length","displayLink","title","snippet","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.bcde89d0.chunk.js","sourcesContent":["// React context API\r\nimport React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\n//preparing the data layer\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\n//Hook Which allows us to pull information from the data layer\r\nexport const useStateValue = () => useContext(StateContext);\r\n","export const initialState = {\r\n  term: null,\r\n};\r\n\r\nexport const actionTypes = {\r\n  SET_SEARCH_TERM: \"SET_SEARCH_TERM\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  console.log(action);\r\n  switch (action.type) {\r\n    case actionTypes.SET_SEARCH_TERM:\r\n      return {\r\n        ...state,\r\n        term: action.term,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useState } from \"react\";\r\nimport \"./Search.css\";\r\n\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport MicIcon from \"@mui/icons-material/Mic\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { actionTypes } from \"../reducer\";\r\n\r\nfunction Search({ hideButtons = false }) {\r\n  const [{}, dispatch] = useStateValue(\"\");\r\n\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  const history = useHistory();\r\n\r\n  const search = (e) => {\r\n    e.preventDefault();\r\n\r\n    //    console.log(\"you hit the search button\",input);\r\n\r\n    dispatch({\r\n      type: actionTypes.SET_SEARCH_TERM,\r\n      term: input,\r\n    });\r\n\r\n    history.push(\"/search\");\r\n  };\r\n\r\n  return (\r\n    <form className=\"search\">\r\n      <div className=\"search__input\">\r\n        <SearchIcon className=\"searchicon\" />\r\n\r\n        <input value={input} onChange={(e) => setInput(e.target.value)} />\r\n        <MicIcon />\r\n      </div>\r\n      {/* using this tenary operator we hides the buttons of search component\r\n        when we pass the value through Home page then the Buttons will be hide else the buttons will be displayed*/}\r\n      {!hideButtons ? (\r\n        <div className=\"search_buttons\">\r\n          <Button type=\"submit\" variant=\"outlined\" onClick={search}>\r\n            Google Search\r\n          </Button>\r\n\r\n          <Button variant=\"outlined\">I'm Feeling Lucky</Button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"search_buttons\">\r\n          <Button\r\n            className=\"search_buttonHidden\"\r\n            type=\"submit\"\r\n            onClick={search}\r\n            variant=\"outlined\"\r\n          >\r\n            Google Search\r\n          </Button>\r\n\r\n          <Button className=\"search_buttonHidden\" variant=\"outlined\">\r\n            I'm Feeling Lucky\r\n          </Button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import React from \"react\";\r\nimport AppsIcon from \"@mui/icons-material/Apps\";\r\n\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport \"./Home.css\";\r\nimport Search from \"./Search\";\r\nimport Stack from \"@mui/material/Stack\";\r\nfunction Home() {\r\n  return (\r\n    <div className=\"Home\">\r\n      <div className=\"home_header\">\r\n        <div className=\"home_headerLeft\">\r\n          <p></p>\r\n          <p></p>\r\n        </div>\r\n        <div className=\"home_headerRight\">\r\n          <p>Gmail</p>\r\n          <p>Images</p>\r\n          <AppsIcon />\r\n          <Stack direction=\"row\" spacing={2}>\r\n            <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />\r\n          </Stack>\r\n        </div>\r\n      </div>\r\n      <div className=\"home_body\">\r\n        <img\r\n          src=\"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\"\r\n          alt=\"googleImage\"\r\n        />\r\n        <div className=\"home_inputContainer\">\r\n          <Search />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","// Live API CALL\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport API_KEY from \"./Keys\";\r\n\r\nconst CONTEXT_KEY = \"f3938817fc755457a\";\r\n\r\nconst useGoogleSearch = (term) => {\r\n  const [data, setData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      // fetch API\r\n      fetch(\r\n        `https://www.googleapis.com/customsearch/v1?key=${API_KEY}&cx=${CONTEXT_KEY}&q=${term}`\r\n      )\r\n        .then((response) => response.json())\r\n        .then((result) => {\r\n          setData(result);\r\n        });\r\n    };\r\n\r\n    fetchData();\r\n  }, [term]);\r\n\r\n  return { data };\r\n};\r\n\r\nexport default useGoogleSearch;\r\n","export const API_KEY = \"AIzaSyCC_xG32VASosjilYGi5UaKYd2Ar4nPIeE\";\r\n\r\nexport default API_KEY;\r\n","import React from \"react\";\r\nimport useGoogleSearch from \"../useGoogleSearch\";\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Search from \"./Search\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport BookIcon from \"@mui/icons-material/Book\";\r\nimport { LocalOfferOutlined } from \"@mui/icons-material\";\r\nimport VideoLibraryIcon from \"@mui/icons-material/VideoLibrary\";\r\nimport DescriptionIcon from \"@mui/icons-material/Description\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\nimport \"./SearchPage.css\";\r\n\r\nfunction SearchPage() {\r\n  const [{ term }, dispatch] = useStateValue();\r\n\r\n  // LIVE API CALL\r\n  const { data } = useGoogleSearch(term);\r\n\r\n  // MOCK API CALL\r\n  //   const data = Response;\r\n\r\n  console.log(data);\r\n\r\n  return (\r\n    <div className=\"searchPage\">\r\n      <div className=\"searchPage_header\">\r\n        <Link to=\"/\">\r\n          <img\r\n            src=\"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\"\r\n            alt=\"googleImage\"\r\n          />\r\n        </Link>\r\n        <div className=\"searchPage_headerBody\">\r\n          <Search hideButtons />\r\n          <div className=\"searchPage_option\">\r\n            <div className=\"searchPage_optionLeft\">\r\n              <div className=\"searchPage_option\">\r\n                <SearchIcon />\r\n                <Link to=\"/all\">All</Link>\r\n              </div>\r\n\r\n              <div className=\"searchPage_option\">\r\n                <BookIcon />\r\n                <Link to=\"/all\">Books</Link>\r\n              </div>\r\n\r\n              <div className=\"searchPage_option\">\r\n                <LocalOfferOutlined />\r\n\r\n                <Link to=\"/all\">Shopping</Link>\r\n              </div>\r\n\r\n              <div className=\"searchPage_option\">\r\n                <VideoLibraryIcon />\r\n                <Link to=\"/all\">Videos</Link>\r\n              </div>\r\n\r\n              <div className=\"searchPage_option\">\r\n                <DescriptionIcon />\r\n                <Link to=\"/all\">News</Link>\r\n              </div>\r\n              <div className=\"searchPage_option\">\r\n                <MoreVertIcon />\r\n                <Link to=\"/all\">More</Link>\r\n              </div>\r\n            </div>\r\n            <div className=\"searchPage_optionRight\">\r\n              <div className=\"searchPage_option\">\r\n                <Link to=\"/settings\">Settings</Link>\r\n              </div>\r\n              <div className=\"searchPage_option\">\r\n                <Link to=\"/tools\">Tools</Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {term && (\r\n        <div className=\"searchPage__results\">\r\n          <p className=\"searchPage__resultCount\">\r\n            About {data?.searchInformation.formattedTotalResults} results (\r\n            {data?.searchInformation.formattedSearchTime} seconds) for {term}\r\n          </p>\r\n\r\n          {data?.items.map((item) => (\r\n            <div className=\"searchPage__result\">\r\n              <a href={item.link}>\r\n                {item.pagemap?.cse_image?.length > 0 &&\r\n                  item.pagemap?.cse_image[0]?.src && (\r\n                    <img\r\n                      className=\"searchPage__resultImage\"\r\n                      src={item.pagemap?.cse_image[0]?.src}\r\n                      alt=\"\"\r\n                    />\r\n                  )}\r\n                {item.displayLink}\r\n              </a>\r\n              <a className=\"searchPage__resultTitle\" href={item.link}>\r\n                <h2>{item.title}</h2>\r\n              </a>\r\n              <p className=\"searchPage__resultSnippet\">{item.snippet}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPage;\r\n","import \"./App.css\";\nimport Home from \"./pages/Home\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SearchPage from \"./pages/SearchPage\";\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/search\">\n            <SearchPage />\n          </Route>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport reducer, { initialState } from \"./reducer\";\nimport { StateProvider } from \"./StateProvider\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\nserviceWorker.unregister();\n"],"sourceRoot":""}